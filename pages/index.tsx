import fs from "fs";
import matter from "gray-matter";
import Head from "next/head";
import path from "path";
import styles from "../assets/styles/Home.module.css";

const Home = () => {
  return (
    <div className={styles.container}>
      <Head>
        <title>{process.env.NEXT_PUBLIC_PROJECT_NAME}</title>
        <meta
          name="description"
          content={
            process.env.NEXT_PUBLIC_PROJECT_NAME + " generated by Markbase"
          }
        />
        <link rel="icon" href="/favicon-512x512.png" />
      </Head>

      <main className={styles.main}>
        <div className="mb-4">
          {/* {props.content.map(({ slug }) => (
            <Link key={slug} href={`/pages/${slug}`} passHref>
              <a>
                <p className="text-lg text-white">{slug}</p>
              </a>
            </Link>
          ))} */}
        </div>
      </main>
    </div>
  );
};

export async function getServerSideProps() {
  // Get home files from first level of the content dir
  let homeFiles = fs.readdirSync(path.join("content")).filter((filename) => {
    if (filename.includes(".md")) {
      const resolvedPath = "content/" + filename;

      try {
        const mdFile = fs.readFileSync(path.resolve(resolvedPath), "utf-8");
        const md = matter(mdFile, {});

        return md.data.hasOwnProperty("home") && md.data.home;
      } catch (error) {
        return false;
      }
    }
  });

  if (homeFiles.length > 0) {
    const resolvedPath =
      "/pages/" + encodeURIComponent(homeFiles[0].replace(".md", ""));

    return {
      redirect: {
        destination: resolvedPath,
        permanent: true,
      },
    };
  } else {
    // Redirect to a random page
    homeFiles = fs.readdirSync(path.join("content")).filter((filename) => {
      if (filename.includes(".md")) {
        return true;
      }
    });

    if (homeFiles.length > 0) {
      const resolvedPath =
        "/pages/" + encodeURIComponent(homeFiles[0].replace(".md", ""));

      return {
        redirect: {
          destination: resolvedPath,
          permanent: true,
        },
      };
    }
  }
}

export default Home;
